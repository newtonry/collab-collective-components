// Fonts
@import url(https://fonts.googleapis.com/css?family=IBM+Plex+Sans:400,500|IBM+Plex+Mono:400,500);

// Colors
$blue-ink: #2C34ED;
$light-ink: #B8B9CA;
$transfer-paper: #E8E9F8;
$color-black: #000000;
$color-white: #FFFFFF;
$red-ink: #ED2C2C;

// Metrics
$metric-xxs: 2px;
$metric-xs: 8px;
$metric-s: 12px;
$metric-m: 16px;
$metric-l: 20px;
$metric-xl: 30px;
$metric-xxl: 50px;

%standard-border {
  border: 1px solid $blue-ink;
  box-sizing: border-box;
}

// This is just for the styleguide
.light-theme {
  background-color: $transfer-paper;
  padding: $metric-l;
}

// This is just for the styleguide
.dark-theme {
  background-color: $blue-ink;
  padding: 20px;

  h3 {
    color: $color-white;
  }
}

.component-title {
  margin-bottom: $metric-s;
  margin-left: -36px;
  color: $color-black !important;
  text-transform: uppercase;
  font-weight: 300;
  font-family: IBM Plex Mono;
  font-size: 12px;
  &:before,  {
    content: "_____";
  }
}

body {
  font-family: 'IBM Plex Sans', sans-serif;
  font-size: 16px;
  line-height: 21px;
  margin-left: auto;
  margin-right: auto;
  max-width: 714px;
  box-sizing: border-box;
  padding-top: $metric-xxl;
  padding-right: $metric-l;
  padding-left: $metric-l;
}

.component-example {
  margin-bottom: $metric-xxl;
}

.radio-option {
  $radio-button-height: 18px;
  display: flex;
  align-items: center;
  cursor: pointer;
  margin-bottom: $metric-s;
  &:last-child {
    margin-bottom: unset;
  }

  label {
    cursor: pointer;
  }

  /* Hide the browser's default radio button */
  input {
      position: absolute;
      opacity: 0;
      height: $radio-button-height;
      width: $radio-button-height;
      cursor: pointer;
  }

  /* Create a custom radio button */

  .radio-button {
      display: flex;
      align-items: center;
      justify-content: center;
      height: $radio-button-height;
      width: $radio-button-height;
      border: 2px solid $blue-ink;
      border-radius: 50%;
      margin-right: $metric-s;
      box-sizing: border-box;
  }

  /* On mouse-over, add a grey background color */
  &:hover input ~ .radio-button {
      background-color: $transfer-paper;
  }

  /* Create the indicator (the dot/circle - hidden when not checked) */
  .radio-button:after {
      content: "";
      display: none;
  }

  /* Show the indicator (dot/circle) when checked */
  input:checked ~ .radio-button:after {
      display: block;
  }

  /* Style the indicator (dot/circle) */
  .radio-button:after {
      height: 8px;
      width: 8px;
      background-color: $color-black;
      border-radius: 50%;
  }
}

.check-option {
    position: relative;
    $checkbox-height: 18px;
    align-items: center;
    display: flex;
    cursor: pointer;
    margin-bottom: $metric-s;
    &:last-child {
      margin-bottom: unset;
    }
  label {
    cursor: pointer;
  }
  /* Hide the browser's default checkbox */
  input {
      position: absolute;
      top: -1px;
      left: -1px;
      opacity: 0;
      height: $checkbox-height;
      width: $checkbox-height;
      cursor: pointer;
      box-sizing: border-box;
  }

  /* Create a custom checkbox */
  .checkbox {
      display: flex;
      align-items: center;
      justify-content: center;
      height: $checkbox-height;
      width: $checkbox-height;
      border: 2px solid $blue-ink;
      margin-right: $metric-s;
      box-sizing: border-box;
  }

  /* On mouse-over, add a grey background color */
  &:hover input ~ .checkbox {
      background-color: $transfer-paper;
  }

  /* Create the checkmark/indicator (hidden when not checked) */
  .checkbox:after {
      position: absolute;
      content: "";
      display: none;
  }

  /* Show the checkmark when checked */
  input:checked ~ .checkbox:after {
      display: block;
  }

  /* Style the checkmark/indicator */
  .checkbox:after {
      left: 9px;
      top: 0px;
      width: 6px;
      height: 13px;
      border: solid $color-black;
      border-width: 0 2px 2px 0;
      transform: rotate(45deg);
  }
}

.info-box {
  @extend %standard-border;
  padding: $metric-m;

  background-color:  rgba($blue-ink, 0.2);

  p {
    color: $blue-ink;
  }
}

.standard-button {
  padding: $metric-xs $metric-m;
  background-color: $transfer-paper;
  border: 1px solid #2C34ED;
  box-sizing: border-box;
  box-shadow: inset 1px 1px #FFFFFF, 2px 2px $transfer-paper;
  color: $blue-ink;
  font-family: IBM Plex Sans;
  font-size: 16px;
  outline: none;
  cursor: pointer;

  &:hover {
    opacity: 0.82;
  }

  &:active {
    opacity: 1;
    box-shadow: 0px 0px;
  }

  &:disabled {
    opacity: 0.48;
    box-shadow: 0px 0px 0px 0px;
    background-color: rgba(0, 0, 0, 0);
  }

}

.secondary-button {
  padding: $metric-xs $metric-m;
  background: rgba(255, 255, 255, 0);
  border: 1px solid $blue-ink;
  box-sizing: border-box;
  color: $blue-ink;
  font-family: IBM Plex Sans;
  font-size: 16px;
  outline: none;
  cursor: pointer;

  &:hover {
    opacity: 0.82;
  }

  &:active {
    opacity: 1.0;
  }

}

.tertiary-button {
  padding: $metric-xs $metric-m;
  background: $blue-ink;
  box-sizing: border-box;
  border: 1px solid $blue-ink;
  color: $color-white;
  font-family: IBM Plex Sans;
  font-size: 16px;
  outline: none;
  cursor: pointer;

  &:hover {
    opacity: 0.82;
  }

  &:active {
    opacity: 1.0;
  }

}

.cta-outline-button {
  padding: $metric-xs $metric-m;
  background: rgba(255, 255, 255, 0);
  box-sizing: border-box;
  border: 2px solid $color-white;
  color: $color-white;
  font-family: IBM Plex Sans;
  font-size: 16px;
  outline: none;
  cursor: pointer;

  &:hover {
    background: rgba(255, 255, 255, 1);
    color: $blue-ink;
  }

  &:active {
    opacity: 1.0;
  }

}

.descriptor-text {
  font-family: IBM Plex Sans;
  font-style: normal;
  font-weight: 500;
  line-height: normal;
  font-size: 13px;
  text-transform: uppercase;
  color: #2C34ED;
}

.logo-icon {

}

.close-button {

}


.form-container {
  background: $color-white;
  border: 2px solid #2C34ED;
  box-sizing: border-box;
  box-shadow: 3px 3px 0px #FFFFFF, inset 2px 2px 0px #F7F8FF;


  .form-content:not(.descriptor-text) {
    padding-left: $metric-xl;
    padding-right: $metric-xl;
  }

  .descriptor-text {
    margin-top: $metric-xs;
    margin-left: $metric-m;
    margin-bottom: $metric-s;
  }

  .divider {
    border: 0.5px solid #2C34ED;
    margin-right: $metric-xl;
    margin-top: $metric-l;
    margin-bottom: $metric-l;
  }

  .form-content-block {
    margin-bottom: $metric-m;
  }

  .form-content-block:last-child {
    margin-bottom: unset;
  }

  button {
    display: inline-block;
  }

  .button-area {
    margin: $metric-l;
    text-align: right;
  }

}


::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */
  color: $light-ink;
  opacity: 1; /* Firefox */
}

:-ms-input-placeholder { /* Internet Explorer 10-11 */
  color: #B8B9CA;
}

::-ms-input-placeholder { /* Microsoft Edge */
  color: #B8B9CA;
}

.text-input-large {
  display: flex;
  flex-flow: column-reverse;
  margin-bottom: $metric-s;

    label, input {
    transition: all 0.2s;
    touch-action: manipulation;
  }

  input {
    font-size: 22px;
    font-family: IBM Plex Mono;
    -webkit-appearance: none;
    padding: 0;
    cursor: text;
    margin-left: 14px;
    border: none;
    background-color: transparent;
  }

  input:focus {
    outline: 0;
    opacity: 1;
    caret-color: $blue-ink;
  }

  label {
    text-transform: uppercase;
    color: $light-ink;
    font-family: IBM Plex Mono;
    font-weight: 400;
    z-index: -1;
  }
  /**
  * Translate down and scale the label up to cover the placeholder,
  * when following an input (with placeholder-shown support).
  * Also make sure the label is only on one row, at max 2/3rds of the
  * fieldâ€”to make sure it scales properly and doesn't wrap.
  */
  input:placeholder-shown + label {
    max-width: 30%;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    transform-origin: left top;
    transform: translate(15px, 22px) scale(1.692);
  }
  /**
  * By default, the placeholder should be transparent. Also, it should
  * inherit the transition.
  */
  ::-webkit-input-placeholder {
    opacity: 0;
    transition: inherit;
  }
  /**
  * Show the placeholder when the input is focused.
  */
  input:focus::-webkit-input-placeholder {
    opacity: 1;
  }
  /**
  * When the element is focused, remove the label transform.
  * Also, do this when the placeholder is _not_ shown, i.e. when
  * there's something in the input at all.
  */
  input:not(:placeholder-shown) + label,
  input:focus + label {
    transform: translate(0, 0) scale(1);
    cursor: pointer;
    color: $blue-ink;
    font-family: IBM Plex Sans;
    font-weight: 500;
  }

}

.text-input-standard {
  label {
    display:block;
    margin-bottom: $metric-s;
  }

  input {
    width: 100%;
    margin-left: 14px;
    margin-right: 14px;
    font-style: normal;
    font-weight: normal;
    line-height: normal;
    font-size: 16px;
    border: none;
    font-family: IBM Plex Sans;
    caret-color: $blue-ink;
    outline: none;
    resize: none;
  }
}

.textarea-input {
  label {
    display: block;
    margin-bottom: $metric-m;

    &.hide {
      display: none;
    }
  }

  textarea {
    width: 100%;
    margin-left: 14px;
    margin-right: 14px;
    font-style: normal;
    font-weight: normal;
    line-height: normal;
    font-size: 16px;
    border: none;
    font-family: IBM Plex Sans;
    caret-color: $blue-ink;
    outline: none;
    resize: none;
    overflow: auto;
  }


}


.dropdown-input {
  display: inline-block;
  border: 2px solid #2C34ED;
  box-sizing: border-box;
  font-size: 16px;
  color: $color-black;
  cursor: pointer;

  .dropdown-item {
    padding: $metric-xs $metric-m;
    &:hover {
      background-color: $transfer-paper;
    }

    &.selected {
      color: $blue-ink;
    }
  }

}

.error-message {
  color: $red-ink;
  &:hover {
    animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both;
    transform: translate3d(0, 0, 0);
    backface-visibility: hidden;
    perspective: 1000px;
  }

  @keyframes shake {
    10%, 90% {
      transform: translate3d(-1px, 0, 0);
    }

    20%, 80% {
      transform: translate3d(2px, 0, 0);
    }

    30%, 50%, 70% {
      transform: translate3d(-4px, 0, 0);
    }

    40%, 60% {
      transform: translate3d(4px, 0, 0);
    }
  }
}

.footer {

  .top-content, .bottom-content {
    display: flex;
    margin-bottom: 16px;
  }

  .footer-item {
    color: $color-white;
    margin-right: 30px;
    font-family: IBM Plex Sans;
    font-size: 14px;
  }
}
